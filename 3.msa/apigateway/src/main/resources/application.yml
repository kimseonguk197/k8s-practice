server:
  port: 8080

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - 'http://localhost:3000'
              - 'https://www.bradkim198.shop'
            allowedMethods: '*'
            allowedHeaders: '*'
            allowedCredentials: true
      routes:
        - id: member-service
          predicates:
            - Path=/member-service/**
          filters:
#            첫번째 접두어를 제거한후에 member-service 서버로 http요청 전달
            - StripPrefix=1
#          eureka에 등록된 member-service라는 이름으로 http요청 전달
          uri: lb://member-service
        - id: ordering-service
          predicates:
            - Path=/ordering-service/**
          filters:
            #            첫번째 접두어를 제거한후에 member-service 서버로 http요청 전달
            - StripPrefix=1
          #          eureka에 등록된 member-service라는 이름으로 http요청 전달
          uri: lb://ordering-service
        - id: product-service
          predicates:
            - Path=/product-service/**
          filters:
            #            첫번째 접두어를 제거한후에 member-service 서버로 http요청 전달
            - StripPrefix=1
          #          eureka에 등록된 member-service라는 이름으로 http요청 전달
          uri: lb://product-service

jwt:
  expirationAt: 1000
  secretKeyAt: ${AT_SECRET_KEY}
  expirationRt: 10000
  secretKeyRt: ${RT_SECRET_KEY}